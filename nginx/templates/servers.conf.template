# http
server {

  listen				    80;
  server_name				${NGINX_HOST};
  return 				    301 https://$server_name$request_uri;

}

# https
server {

  listen				    443 ssl http2;
  server_name				${NGINX_HOST};
  ssl_session_timeout		4h;
  ssl_session_cache			shared:NGX_SSL_CACHE:10m;
  ssl_session_tickets		off;
  ssl_buffer_size			1400;

  ssl_protocols				TLSv1.2;
  ssl_ciphers				ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256;
  ssl_prefer_server_ciphers	off;

  ssl_ecdh_curve			secp521r1:secp384r1;

  ssl_certificate			/run/secrets/site.crt;
  ssl_certificate_key		/run/secrets/site.key;
  ssl_dhparam				/run/secrets/dhparam.pem;
  ssl_trusted_certificate	/run/secrets/chain.pem;

  ssl_stapling				on;
  ssl_stapling_verify		on;

  resolver                  ${RESORVER_IP} valid=300s;
  resolver_timeout          5s;

  add_header				Strict-Transport-Security "max-age=31536000; includeSubdomains" always;
  add_header				X-XSS-Protection "1; mode=block" always;
  # added via upstream
  # add_header				X-Frame-Options "SAMEORIGIN" always;
  add_header				Referrer-Policy "no-referrer";
  add_header				X-Content-Type-Options "nosniff" always;
  
  # frontend
  location / {

    root				    /data/app;
    index				    index.html;

  }

  # backend
  location /api {

    # proxy_pass			http://backend;
    root				    /data/app;
    index				    index.html;

  }

  # logs
  access_log				/var/log/nginx/${NGINX_HOST}_access.log main;
  error_log				    /var/log/nginx/${NGINX_HOST}_error.log warn;

}
